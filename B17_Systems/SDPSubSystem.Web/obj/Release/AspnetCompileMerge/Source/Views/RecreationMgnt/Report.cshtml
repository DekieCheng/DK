@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .btn-box {
        width: 120px;
        height: 100px;
        margin: 10px;
        text-align: center;
        word-wrap: break-word;
        background-color: darkseagreen;
        color: white;
        float: left;
        padding-top: 25px;
        box-shadow: 3px 3px 5px #888888;
        border-radius: 3px;
        cursor: pointer;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <span>文体中心使用报告</span>
                </div>
                <div class="panel-body">
                    <div id="Report" style="height:600px;"></div>
                </div>
            </div>
        </div>
    </div>
    @*<div id="container" style="height: 400px"></div>*@
</div>
<div class="modal fade bs-example-modal-lg" id="_Dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"></div>

<script type="text/javascript">
    $(function () {
        //loadChartE();
        $.post('@Url.Action("GetReportData")', '', function (result) {
            loadChart(result.Report, "Report", "LF2Check");
        })
    })
    
    
    function loadChart(data, dicName, checkName) {
        //debugger
        var xAxisData = JSLINQ(data).Select(function (x) { return x.Category }).Distinct(function (x) { return x }).ToArray();
        var Month = data[0].Month;

        //debugger
        var noonData = [];
        $.each(data, function (key, val) {
            noonData.push(val.noonQty);
        });

        var eveData = [];
        $.each(data, function (key, val) {
            eveData.push(val.eveQty);
        });

        //debugger
        var chart = Highcharts.chart('Report', {
            chart: {
                type: 'column',
                options3d: {
                    enabled: true,
                    alpha: 0,
                    beta: 0,
                    viewDistance: 25,
                    depth: 30
                },
                marginTop: 60,
                marginRight: 20
            },
            title: {
                text: Month+'文体中心使用报告'
            },
            xAxis: {
                categories: xAxisData
            },
            yAxis: {
                allowDecimals: false,
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<b>{point.key}</b><br>',
                pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.name}: {point.y} / {point.stackTotal}'
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    depth: 40
                }
            },
            series: [{
                name: '中午',
                data: noonData,
                stack: 'qty'
            }, {
                name: '下午',
                data: eveData,
                stack: 'qty'
            }]
        });
        return chart;
    }

    function loadChartE() {
        var chart = Highcharts.chart('container', {
            chart: {
                type: 'column',
                options3d: {
                    enabled: true,
                    alpha: 0,
                    beta: 0,
                    viewDistance: 25,
                    depth: 30
                },
                marginTop: 60,
                marginRight: 20
            },
            title: {
                text: '以性别划分的水果消费总量'
            },
            xAxis: {
                categories: ['苹果', '橘子', '梨', '葡萄', '香蕉']
            },
            yAxis: {
                allowDecimals: false,
                min: 0,
                title: {
                    text: '水果数量'
                }
            },
            tooltip: {
                headerFormat: '<b>{point.key}</b><br>',
                pointFormat: '<span style="color:{series.color}">\u25CF</span> {series.name}: {point.y} / {point.stackTotal}'
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    depth: 40
                }
            },
            series: [{
                name: '小张',
                data: [5, 3, 4, 7, 2],
                stack: 'male'
            }, {
                name: '小王',
                data: [3, 4, 4, 2, 5],
                stack: 'male'
            }, {
                name: '小彭',
                data: [2, 5, 6, 2, 1],
                stack: 'female'
            }, {
                name: '小潘',
                data: [3, 0, 4, 4, 3],
                stack: 'female'
            }]
        });
    }

</script>