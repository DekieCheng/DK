<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        DQAAAk1TRnQBSQFMAwEBAAEIAQABCAEAASABAAEgAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABGAYAATASAFreA98D6P8AIQBX6gPpA+AD3/8AIQBX/QP7A+kD3v8AIQBX/wP9A+oD3v8A
        IQAX/wH+Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9
        Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Af8B/gH9Av8B/gn/A/0D6gPe
        /wAhABP/Af4B+wH+AfkB7QH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8
        AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH8AfMB2wH+
        AfkB7QH/Af4B+gb/A/0D6gPe/wAhABH/Av4B+QHtAfoB6gG+AfUB1AF9AfUB1AF8AfUB1AF8AfUB1AF8
        AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8AfUB1AF8
        AfUB1AF8AfUB1AF8AfUB1AF8AfoB6QG8Af4B+QHtAv8B/gP/A/0D6gPe/wAhABD/Af4B/QH8AfQB3AH1
        AdQBfQHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHr
        AaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAHrAaoBAAH1AdQBfAH8AfMB2wH/
        Af4B/QP/A/0D6gPe/wAhABD/Af4B/QH8AfQB3AH1AdQBfQHrAaoBAAHrAasBAQHrAasBAgHrAasBBAHs
        Aa4BCgHwAb4BPQHzAc0BaAH1AdIBeAH1AdMBegHyAccBVAHvAbwBMwHtAbMBGAHsAawBBQHrAasBAwHr
        AasBAgHrAaoBAQHrAaoBAAH1AdQBfAH8AfMB2wH/Af4B/QP/A/0D6gPe/wAhABD/Af4B/QH8AfQB3AH1
        AdQBfQHrAaoBAAHtAbEBEgHuAbUBHwHuAbcBJQHvAbsBMAH0AdMBewH5AekBuwH7AfEB1AH7AfIB1gH3
        Ad8BngHzAc8BbAHwAcIBRQHvAbgBKAHuAbUBIAHuAbMBGQHsAa8BDQHrAaoBAAH1AdQBfAH8AfMB2wH/
        Af4B/QP/A/0D6gPe/wAhABD/Af4B/QH8AfQB3AH1AdQBfQHrAaoBAAHwAb8BPwH0Ac8BbgH0AdUBgAH1
        AdcBiQH5AegBugH8AfcB5gH+AfwB9wH+AfwB+AH7AfAB0gH5AeUBsQH3AdwBlgH1AdUBgQH0Ac8BbwHz
        AccBVgHvAboBLwHrAaoBAAH1AdQBfAH8AfMB2wH/Af4B/QP/A/0D6gPe/wAhABD/Af4B/QH8AfQB3AH1
        AdQBfQHrAaoBAAH1AdEBcgH7Ae4BygH9AfgB6gH9AfkB7QH9AfsB9AH+Af0B+gL+AfwC/gH8Af4B/AH3
        Af4B+wHzAf0B+QHvAf0B9wHoAfsB7gHOAfgB3wGiAfIBxwFYAesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAfUB0wF4AfwB8QHTAf0B+gHxAf0B+gHv
        Af0B+gHvAf0B+gHvAf0B+gHvAf0B+gHvAf0B+gHvAf0B+gHvAf0B+gHuAf0B+QHsAfwB9AHgAfoB6AG8
        AfQBzQFqAesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9
        AesBqgEAAfQB0AFyAfoB7AHFAfsB8gHYAfsB7QHLAfsB7QHIAfsB7QHIAfsB7QHIAfsB7QHIAfsB7QHI
        AfsB7QHIAfsB7QHIAfsB7gHLAfsB8gHYAfsB7AHHAfUB0QF1AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAfIBywFgAfgB4AGgAfcB3gGaAfUB0gF2
        AfQB0AFxAfQBzwFwAfQBzwFwAfQBzwFwAfQBzwFwAfQBzwFwAfQB0AFyAfUB0wF5AfgB5AGvAfoB6QHA
        AfUB0gF3AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9
        AesBqgEAAfEBwgFKAfQBzwFwAfEBwwFLAewBrgEKAesBqwECAesBqgEAAesBqgEAAesBqgEAAesBqgEA
        AesBqgEAAesBqwECAewBsAEQAfQB0QF2AfgB5AGwAfQB0QF2AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAfEBwgFKAfQBzwFwAfEBwwFLAewBrgEK
        AesBqwECAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqwECAewBsAEQAfQB0QF2AfgB5AGw
        AfQB0QF2AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9
        AesBqgEAAfEBwgFKAfQBzwFwAfEBwwFLAewBrgEKAesBqwECAesBqgEAAesBqgEAAesBqgEAAesBqgEA
        AesBqgEAAesBqwECAewBsAEQAfQB0QF2AfgB5AGwAfQB0QF2AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAfEBwgFJAfQBzwFvAfEBwwFLAewBrgEL
        AesBqwEDAesBqgEBAesBqgEBAesBqgEBAesBqgEBAesBqgEBAesBqwEDAewBsAERAfQB0QF1AfgB4wGv
        AfQB0QF1AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9
        AesBqgEAAfEBwgFGAfQBzgFrAfIBwwFLAe0BrwEOAewBrQEGAewBrAEEAewBrAEEAewBrAEEAewBrAEE
        AewBrAEEAewBrQEGAe0BsQETAfQB0AFwAfgB4QGkAfQBzwFtAesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAe8BugEvAfEBxAFMAfABvwFAAe4BtgEj
        Ae0BtAEgAe0BtAEfAe0BtAEfAe0BtAEfAe0BtAEfAe0BtAEfAe0BtAEgAe0BtgElAfABwwFKAfIByQFd
        AfABvwE8AesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9
        AesBqgEAAe4BswEaAe4BugEtAe8BuwExAe8BugEuAe4BuQEuAe4BuQEtAe4BuQEtAe4BuQEtAe4BuQEt
        Ae4BuQEtAe4BuQEuAe4BuQEtAe4BtwEnAe4BtQEgAewBsQESAesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF9AesBqgEAAewBrgELAe0BsgEUAe0BtAEaAe0BtAEd
        Ae0BtAEeAe0BtAEeAe0BtAEeAe0BtAEeAe0BtAEeAe0BtAEeAe0BtAEeAe0BtAEcAewBsAEQAewBrQEH
        AesBrAECAesBqgEAAfUB1AF8AfwB8wHbAf8B/gH9A/8D/QPqA97/ACEAEP8B/gH9AfwB9AHcAfUB1AF+
        AesBqgEBAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEA
        AesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAesBqgEAAfUB1AF9AfwB8wHbAf8B/gH9
        A/8D/QPqA97/ACEAEf8C/gH5Ae0B+gHqAb4B9QHUAX4B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHU
        AX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHUAX0B9QHU
        AX0B9QHUAX0B+gHpAb0B/gH5Ae0C/wH+A/8D/QPqA97/ACEAE/8B/gH7Af4B+gHuAfwB9AHcAfwB9AHc
        AfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHc
        AfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAfwB9AHcAf4B+QHtAf8B/gH7Bv8D/QPqA97/ACEAF/8B/gH/
        Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/
        Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QH/Af4B/QL/Af4J/wP9A+oD3v8AIQBX/wP9
        A+oD3v8AIQBX/wP9A+oD3v8AIQBX/wP9A+oD3v8AIQBX/wP9A+oD3v8AIQBX/wP9A+oD3v8AIQABQgFN
        AT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD//8A/wADAAs=
</value>
  </data>
</root>