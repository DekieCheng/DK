{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ollama\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Ollama Web UI\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.prompt = $event),\n    placeholder: \"Enter your prompt here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.prompt]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.generateResponse && $options.generateResponse(...args))\n  }, \"Generate\"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.response ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Response:\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.response), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","prompt","placeholder","onClick","args","$options","generateResponse","loading","_hoisted_2","_createCommentVNode","response","_hoisted_3","_toDisplayString"],"sources":["C:\\00work\\02sc-cfd-git\\05TL\\DK\\DekieLocal\\ollama-web-ui\\src\\components\\OllamaComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"ollama\">\r\n    <h1>Ollama Web UI</h1>\r\n    <textarea v-model=\"prompt\" placeholder=\"Enter your prompt here...\"></textarea>\r\n    <button @click=\"generateResponse\">Generate</button>\r\n    <div v-if=\"loading\">Loading...</div>\r\n    <div v-if=\"response\">\r\n      <h2>Response:</h2>\r\n      <p>{{ response }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      prompt: '',\r\n      response: '',\r\n      loading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async generateResponse() {\r\n      this.loading = true;\r\n      this.response = '';\r\n      \r\n      try {\r\n        const res = await axios.post('http://localhost:11434/api/generate', {\r\n          prompt: this.prompt,\r\n        });\r\n        this.response = res.data.generated_text || \"No response from model.\";\r\n      } catch (error) {\r\n        this.response = \"Error: \" + error.response.err;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ollama {\r\n  font-family: Arial, sans-serif;\r\n  margin: 20px;\r\n}\r\ntextarea {\r\n  width: 100%;\r\n  height: 100px;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;EADrBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAsB,YAAlB,eAAa,sB,gBACjBA,mBAAA,CAA8E;IAHlF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGuBC,KAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAApBF,KAAA,CAAAC,MAAM,E,GACzBJ,mBAAA,CAAmD;IAA1CM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,UAAQ,GAC/BJ,KAAA,CAAAO,OAAO,I,cAAlBZ,mBAAA,CAAoC,OALxCa,UAAA,EAKwB,YAAU,KALlCC,mBAAA,gBAMeT,KAAA,CAAAU,QAAQ,I,cAAnBf,mBAAA,CAGM,OATVgB,UAAA,G,0BAOMd,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAAqB,WAAAe,gBAAA,CAAfZ,KAAA,CAAAU,QAAQ,iB,KARpBD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}